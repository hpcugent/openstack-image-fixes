#demo
export OS_APPLICATION_CREDENTIAL_ID=*****
export OS_APPLICATION_CREDENTIAL_SECRET=*****
export OS_PROJECT_ID=*****

export HOSTNAME_TO_RUN=controller01

export KEYSTONE_ENDPOINT="https://cloudt1.private.ugent.be:13000/v3/"
export HEAT_ENDPOINT="https://cloudt1.private.ugent.be:13004/v1"

#generated by: openstack -vvvvv stack create --dry-run --timeout 30 --enable-rollback  -t heat-template.yaml TESTSTACK --fit
export HEAT_JSON='{"stack_name": "TESTSTACK", "disable_rollback": false, "parameters": {}, "template": {"heat_template_version": "2018-08-31", "description": "This template provides basic functional tests.", "parameters": {"vm_flavour": {"type": "string", "label": "vm_flavour", "description": "Flavour for the VM", "constraints": [{"custom_constraint": "nova.flavor"}], "default": "CPUv1.tiny"}, "vm_image": {"type": "string", "label": "vm_image", "description": "Required VM image", "constraints": [{"custom_constraint": "glance.image"}], "default": "CentOS-8-stream"}, "user_network": {"type": "string", "label": "user_network", "description": "Add the required VM network", "constraints": [{"custom_constraint": "neutron.network"}], "default": "demo_vm"}, "nfs_network": {"type": "string", "label": "nfs_network", "description": "Add the required NFS network", "constraints": [{"custom_constraint": "neutron.network"}], "default": "demo_nfs"}, "floating_ip_id": {"type": "string", "label": "floating_ip_id", "description": "Floating IP id to be asigned to FunctionalTestServer", "default": "dbf39835-41d9-4201-a7bc-b34b7ef32ee6"}, "floating_ip": {"type": "string", "label": "floating_ip", "description": "Floating IP to be pinged from cloud-init", "default": "172.18.245.134"}}, "resources": {"wait_condition": {"type": "OS::Heat::WaitCondition", "properties": {"handle": {"get_resource": "wait_handle"}, "count": 2, "timeout": 600}}, "wait_handle": {"type": "OS::Heat::WaitConditionHandle"}, "security_group": {"type": "OS::Neutron::SecurityGroup", "properties": {"name": "security_group_ingress_icmp", "rules": [{"remote_ip_prefix": "0.0.0.0/0", "direction": "ingress", "protocol": "icmp"}]}}, "functional_test_server": {"type": "OS::Nova::Server", "properties": {"name": "FunctionalTestServer", "security_groups": ["security_group_ingress_icmp"], "networks": [{"network": {"get_param": "user_network"}}, {"network": {"get_param": "nfs_network"}}], "image": {"get_param": "vm_image"}, "flavor": {"get_param": "vm_flavour"}, "user_data_format": "RAW", "user_data": {"str_replace": {"template": "#!/bin/bash\nSHARE=\"$(echo \\\"_NFS_SHARE_\\\"|cut -c3-|head -c-3)\"\nmount -t nfs4 $SHARE /mnt\n[ $? -eq 0 ] && wc_notify --data-binary \"{\\\"status\\\": \\\"SUCCESS\\\", \\\"reason\\\": \\\"Mount $SHARE to /mnt successful.\\\"}\" || wc_notify --data-binary \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"Mount $SHARE to /mnt not successful.\\\"}\"\nping _FLOATING_IP_ -c3 -q &>/dev/null\n[ $? -eq 0 ] && wc_notify --data-binary \"{\\\"status\\\": \\\"SUCCESS\\\", \\\"reason\\\": \\\"Ping to _FLOATING_IP_ successful.\\\"}\" || wc_notify --data-binary \"{\\\"status\\\": \\\"FAILURE\\\", \\\"reason\\\": \\\"Ping to _FLOATING_IP_ not successful.\\\"}\"\n", "params": {"wc_notify": {"get_attr": ["wait_handle", "curl_cli"]}, "_FLOATING_IP_": {"get_param": "floating_ip"}, "_NFS_SHARE_": {"get_attr": ["nfs_share", "export_locations"]}}}}}}, "association": {"type": "OS::Neutron::FloatingIPAssociation", "properties": {"floatingip_id": {"get_param": "floating_ip_id"}, "port_id": {"get_attr": ["functional_test_server", "addresses", {"get_param": "user_network"}, 0, "port"]}}}, "nfs_share": {"type": "OS::Manila::Share", "properties": {"access_rules": [{"access_level": "rw", "access_type": "ip", "access_to": "0.0.0.0"}], "is_public": false, "name": "NFSFunctionalTestShare", "share_protocol": "NFS", "share_type": "default", "size": 1}}}, "outputs": {"wc_data": {"value": {"get_attr": ["wait_condition", "data"]}}}}, "files": {}, "environment": {}, "timeout_mins": 30}'

#create ceph dashboard user by (/tmp/password contains user pass):
#ceph dashboard ac-user-create monitoring -i /tmp/password read-only
export CEPH_DASHBOARD_USER="monitoring"
export CEPH_DASHBOARD_PASS="<password>"

export CEPH_DASHBOARD_IP_PORT="10.128.8.165:8444"
